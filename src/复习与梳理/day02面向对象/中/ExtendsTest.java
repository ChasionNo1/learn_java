package 复习与梳理.day02面向对象.中;

import org.testng.annotations.Test;

/**
 * 继承
 *
 * @Description TODO
 * @Author chasion
 * @Date 2022/1/22 20:49
 **/
public class ExtendsTest {

    @Test
    public void test1(){
        /*
        体现：一旦子类A继承父类B以后，子类A中就获取了父类B中声明的所有的属性和方法。
         *  特别的，父类中声明为private的属性或方法，子类继承父类以后，仍然认为获取了父类中私的结构。只因为封装性的影响，使得子类不能直接调用父类的结构而已。
        子类继承父类以后，还可以声明自己特有的属性或方法：实现功能的拓展。
         *    子类和父类的关系，不同于子集和集合的关系。
         *    extends：延展、扩展

        1.一个类可以被多个子类继承。
        2.Java中类的单继承性：一个类只能有一个父类
        3.子父类是相对的概念。
        4.子类直接继承的父类，称为：直接父类。间接继承的父类称为：间接父类
        5.子类继承父类以后，就获取了直接父类以及所间接父类中声明的属性和方法
        * */
    }

    @Test
    public void test2(){
        // 方法的重写
//        方法的声明： 权限修饰符  返回值类型  方法名(形参列表) throws 异常的类型{
// * 						//方法体
// * 					}
// * 		约定俗称：子类中的叫重写的方法，父类中的叫被重写的方法
//                * 		① 子类重写的方法的方法名和形参列表与父类被重写的方法的方法名和形参列表相同
//                *         ② 子类重写的方法的权限修饰符不小于父类被重写的方法的权限修饰符
//                *      	>特殊情况：子类不能重写父类中声明为private权限的方法
//                *         ③ 返回值类型：
// *      	>父类被重写的方法的返回值类型是void，则子类重写的方法的返回值类型只能是void
//                *      	>父类被重写的方法的返回值类型是A类型，则子类重写的方法的返回值类型可以是A类或A类的子类
//                *      	>父类被重写的方法的返回值类型是基本数据类型(比如：double)，则子类重写的方法的返回值类型必须是相同的基本数据类型(必须也是double)
//                *		④ 子类重写的方法抛出的异常类型不大于父类被重写的方法抛出的异常类型（具体放到异常处理时候讲）
// *	**********************************************************************
// *    子类和父类中的同名同参数的方法要么都声明为非static的（考虑重写，要么都声明为static的（不是重写)。
    }
}
